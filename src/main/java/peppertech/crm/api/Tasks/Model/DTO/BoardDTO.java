package peppertech.crm.api.Tasks.Model.DTO;

import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.io.Serializable;
import java.util.List;

/**
 * Data Transfer Object for the Board entity.
 * Used to transport project-related information without exposing the full entity.
 */
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class BoardDTO implements Serializable {

    @Schema(description = "Unique ID of the board, automatically generated by the database.",
            example = "64a1f9b5e4b0f23d4c8a7e12", accessMode = Schema.AccessMode.READ_ONLY)
    private String id;

    @NotBlank(message = "Board name is required.")
    @Size(max = 100, message = "Board name must be at most 100 characters.")
    @Schema(description = "Name of the board. This field is required.",
            example = "Kanban Project")
    private String name;

    @Size(max = 500, message = "Description must be at most 500 characters.")
    @Schema(description = "Brief description of the project or board.",
            example = "Project for team task management.")
    private String description;

    @Schema(description = "Date when the board was created.",
            example = "2025-06-09 09:45:23", type = "string", format = "date-time", accessMode = Schema.AccessMode.READ_ONLY)
    private String createdAt = null;

    @Schema(description = "Project start date.",
            example = "2025-06-10 09:45:23", type = "string", format = "date")
    private String startDate;

    @Schema(description = "Estimated project end date.",
            example = "2025-09-11 09:45:23", type = "string", format = "date")
    private String endDate;

    @NotBlank(message = "Project status is required.")
    @Pattern(regexp = "ACTIVE|DELAYED|COMPLETED", message = "Status must be one of: ACTIVE, DELAYED, COMPLETED.")
    @Schema(description = "Current status of the project (ACTIVE, DELAYED, COMPLETED).",
            example = "ACTIVE", required = true)
    private String status;

    @NotBlank(message = "Owner ID is required.")
    @Schema(description = "ID of the board owner.",
            example = "64a1f9b5e4b0f23d4c8a7e10", required = true)
    private String owner;

    @Schema(description = "List of IDs for administrators with full permissions.",
            example = "[\"64a1f9b5e4b0f23d4c8a7e11\", \"64a1f9b5e4b0f23d4c8a7e15\"]")
    private List<@NotBlank String> administrators;

    @Schema(description = "List of IDs for users with editing permissions.",
            example = "[\"64a1f9b5e4b0f23d4c8a7e12\"]")
    private List<@NotBlank String> editors;

    @Schema(description = "List of IDs for users with view-only permissions.",
            example = "[\"64a1f9b5e4b0f23d4c8a7e13\"]")
    private List<@NotBlank String> viewers;

    @Schema(description = "List of IDs for columns (phases) associated with the board.",
            example = "[\"64a1f9b5e4b0f23d4c8a7e14\"]")
    private List<@NotBlank String> columns;
}
