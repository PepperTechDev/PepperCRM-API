package peppertech.crm.api.Comments.Model.DTO;


import com.fasterxml.jackson.annotation.JsonFormat;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.List;

/**
 * Data Transfer Object for the Comment entity.
 * Used to transfer comment data without exposing the entire entity.
 */
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class CommentDTO {

    @Schema(description = "Unique ID of the comment, automatically generated by the database.", example = "64a1f9b5e4b0f23d4c8a7e16", hidden = true)
    private String id;

    @Schema(description = "Title of the comment. This field is required.", example = "Design review")
    private String title;

    @Schema(description = "Body or content of the comment. This field is required.", example = "Please review the latest changes in the card design.")
    private String body;

    @Schema(description = "ID of the user who owns or created the comment.", example = "64a1f9b5e4b0f23d4c8a7e17")
    private String ownerId;

    @Schema(description = "The property or entity this comment belongs to (e.g., 'card', 'board').", example = "card")
    private String property;

    @Schema(description = "List of user IDs mentioned with '@' in the comment.", example = "[\"64a1f9b5e4b0f23d4c8a7e18\", \"64a1f9b5e4b0f23d4c8a7e19\"]")
    private List<String> mentionedUserIds;

    @Schema(description = "Date and time when the comment was created, in ISO8601 format.", example = "2025-06-09T15:34:20.123Z", hidden = true)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSX")
    private String createdAt;

    @Schema(description = "Date and time when the comment was last updated, in ISO8601 format.", example = "2025-06-10T10:00:00.000Z", hidden = true)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSX")
    private String updatedAt;
}